#include "Protheus.ch"
#INCLUDE 'APWEBEX.CH' 
#Include "FWMVCDEF.CH"

//-----------------------------------------------------------------------------
/*/ {Protheus.doc} Advpl ASP
Captura e gravação das respostas e envio para seleção de outra pesquisa se existir

@author Wagner Mobile Costa
@version P12
@since 20/04/2015
/*/
//-----------------------------------------------------------------------------
User function TCTTH040()

Local cHtml 	:= ""
Local aRet		:= {}
Local nP4_TURMA	:= 0
Local nP4_PERIO	:= 0
Local nP4_PESQ	:= 0
Local nP4_ALUNO	:= 0
Local nPCPF		:= 0
Local Radios	:= ""
Local Areas		:= ""
Local finalid	:= ""
Local depto		:= ""
Local Pontuac	:= ""
Local lRA		:= ""
Local lRet		:= .F.
Local lDelete	:= .F.
Local nGravado	:= nError := 0
Local cSQL		:= ""
Local Mailprof  := ""
Local _cEmp_    := GetPvProfString(GetEnvServer(),"EMP_CTT","00",GetAdv97())
Local _cFil_    := ""
Local nFor		:= 0

Private	cCpf	:= ""
Private	cCurso	:= HttpPost->cCurso
Private cResp	:= "Problemas ao tentar salvar. Tente mais tarde ..."
Private aDadosC := {}

aadd(aDadosC,{	HTTPPOST->aDadosC1,HTTPPOST->aDadosC2,HTTPPOST->aDadosC3,HTTPPOST->aDadosC4,HTTPPOST->aDadosC5,HTTPPOST->aDadosC6,HTTPPOST->aDadosC7,;
				HTTPPOST->aDadosC8,HTTPPOST->aDadosC9,HTTPPOST->aDadosC10,HTTPPOST->aDadosC11,HTTPPOST->aDadosC12,HTTPPOST->aDadosC13})
HTTPSESSION->aDadosC := aDadosC

_cFil_ := HTTPPOST->aDadosC14
RpcClearEnv()
RpcSetEnv( _cEmp_,_cFil_,,, "FIN", "pesquisa", { "PD2", "PD3", "PD4" },,,,)

aEval( HttpPost->aPost 	, {|x| aadd(aRet,{ x , &("HttpPost->"+x)} )  })
nP4_TURMA := aScan(aRet,{|x| x[1] == 'CODTURM' })
nP4_PERIO := aScan(aRet,{|x| x[1] == 'PERIODO' })
nP4_PESQ  := aScan(aRet,{|x| x[1] == 'CODPESQ' })
nP4_ALUNO := aScan(aRet,{|x| x[1] == 'CODALU' })
nPCPF	  := aScan(aRet,{|x| x[1] == 'CCPF' })

WEB EXTENDED INIT cHtml
if len(aRet)>0
	cCpf 	:= aRet[nPCPF][2]
	cTurma	:= aRet[nP4_TURMA][2]
	cPerio	:= aRet[nP4_PERIO][2]
	cPesq   := aRet[nP4_PESQ][2]
	cAluno	:= aRet[nP4_ALUNO][2]
	
	PD3->(DbSetOrder(1))
	PDF->(DbSetOrder(1))
	PD3->(DbSeek(_cFil_ + cTurma))
	PDF->(DbSeek(_cFil_ + cTurma + cPerio))
	
	BeginTran()
	For nFor := 1 to len(aRet)
		if nFor < nPCPF
			lRA			:= SUBSTR(aRet[nFor][1],1,1)=='R'
			Radios		:= SUBSTR(aRet[nFor][1],6,2)
			Areas		:= SUBSTR(aRet[nFor][1],5,2)
			finalid		:= SUBSTR(aRet[nFor][1],AT('FINALID',aRet[nFor][1])+7,1)
			depto		:= SUBSTR(aRet[nFor][1],AT('DEPTO',aRet[nFor][1])+5,1)
			Pontuac		:= iif(lRA,SUBSTR(aRet[nFor][1],AT('PONTUAC',aRet[nFor][1])+7),' ')
	   		if UPPER(substr(IIF(lRA,Radios,Areas),1,2)) != 'OS'
				nGravado ++

				If ! lDelete
					cSQL := "DELETE FROM " + RetSqlName("PD4") + " " +;
					        " WHERE D_E_L_E_T_ = ' ' AND PD4_FILIAL = '" + _cFil_ + "' AND PD4_TURMA = '" + cTurma + "' " +;
		    				   "AND PD4_PERIO = '" + cPerio + "' AND PD4_ALUNO = '" + cAluno + "'"

					If (nError := TCSQLExec(cSQL)) <> 0
					   	cResp := "TCTTH040:DELETE_PD4 - " + AllTrim(Str(nError)) + "-" + TCSQLError()
			   			DisarmTran()
			   			Loop
			   		EndIf

					lDelete := .T.
				EndIf
				
				RecLock("PD4", .T.)
				PD4->PD4_FILIAL := _cFil_
				PD4->PD4_TURMA  := cTurma
				PD4->PD4_PERIO  := cPerio
				PD4->PD4_PESQ   := cPesq
				PD4->PD4_ALUNO  := cAluno
				PD4->PD4_ITEM   := IIF(lRA,Radios,Areas)
				PD4->PD4_FINALI := finalid 
				PD4->PD4_DEPTO  := depto
				PD4->PD4_ASSUNT := IIF(lRA,'1','2')
				PD4->PD4_PONTUA := Pontuac
				PD4->PD4_DTRESP := DATE()  
				PD4->PD4_RESPOS := IIF(lRA,'',aRet[nFor][2])
				PD4->PD4_EQUIV  := IIF(lRA,aRet[nFor][2],'')
				PD4->PD4_PROF	:= PDF->PDF_PROF
				PD4->PD4_DTCURS	:= PDF->PDF_DTINI
				PD4->(MsUnLock())
			EndIf
		endif
	Next nFor

	If nGravado > 0
		cSQL := "UPDATE " + RetSqlName("PD7") + " SET PD7_PESQRP = PD7_PESQRP + 1 " +; 
		         "WHERE D_E_L_E_T_ = ' ' AND PD7_FILIAL = '" + xFilial("PD7") + "' AND PD7_TURMA = '" + cTurma + "' " +;
		           "AND PD7_ALUNO = '" + cAluno + "'" 
		
		If (nError := TCSQLExec(cSQL)) <> 0
			cResp := "TCTTH040:UPDATE_PD7 - " + AllTrim(Str(nError)) + "-" + TCSQLError()
   			DisarmTran()
   		EndIf
	EndIf
	If nError == 0
		EndTran()
		
		If nGravado > 0
			cResp := "Respostas salvas com Sucesso"
		Else
			cResp := "Nenhum resposta para ser salva ..."
		EndIf
	EndIf
	
Endif

cHtml := h_TCTTH040()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ROTINA PARA DISPARO DE E-MAIL³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
if len(aRet)>0
	PD2->(DbSeek(xFilial() + PD3->PD3_PROF))
	StartJob( "U_TCTTM010", GetEnvServer(), .F., {{	SM0->M0_CODIGO,SM0->M0_CODFIL}, AllTrim(PD2->PD2_EMAIL),;
													aRet[nP4_PESQ][2], aRet[nP4_ALUNO][2], aRet[nP4_TURMA][2], aDadosC, cCurso } )
//	U_TCTTM010({{	SM0->M0_CODIGO,SM0->M0_CODFIL}, AllTrim(PD2->PD2_EMAIL),;
//					aRet[nP4_PESQ][2], aRet[nP4_ALUNO][2], aRet[nP4_TURMA][2], aDadosC, cCurso } )

ENDIF
WEB EXTENDED END

Return(cHtml)